// <auto-generated />
using System;
using CLIMFinders.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CLIMFinders.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250303105143_initial v2")]
    partial class initialv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Matches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MatchedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Notified")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.PlanServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId")
                        .IsUnique();

                    b.ToTable("PlanServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User Registration.",
                            PlanId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vehicle Search by VIN.",
                            PlanId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Access the search results.",
                            PlanId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Business registration",
                            PlanId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vehicle Management",
                            PlanId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Notification System",
                            PlanId = 2
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleNanme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNanme = "Users"
                        },
                        new
                        {
                            Id = 2,
                            RoleNanme = "Business"
                        },
                        new
                        {
                            Id = 3,
                            RoleNanme = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Searches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SearchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.SubRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleNanme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNanme = "Tow"
                        },
                        new
                        {
                            Id = 2,
                            RoleNanme = "Impound"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.SubscriptionPlans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10m,
                            Duration = 1,
                            Tier = "User Registration (Car Owners)"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10m,
                            Duration = 1,
                            Tier = "Business Registration (Tow or Impound)"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubRoleId")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubRoleId")
                        .IsUnique()
                        .HasFilter("[SubRoleId] IS NOT NULL");

                    b.HasIndex("TierId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedById = 1,
                            AddedOn = new DateTime(2025, 3, 3, 16, 21, 43, 342, DateTimeKind.Local).AddTicks(935),
                            ConfirmationCode = "",
                            ConfirmedOn = new DateTime(2025, 3, 3, 16, 21, 43, 342, DateTimeKind.Local).AddTicks(951),
                            Email = "admin@admin.com",
                            FullName = "Super Admin",
                            IsConfirmed = true,
                            IsDeleted = false,
                            ModifiedById = 1,
                            ModifiedOn = new DateTime(2025, 3, 3, 16, 21, 43, 342, DateTimeKind.Local).AddTicks(948),
                            PasswordHash = "fJ4Ez53UYH8rHkKlIIdkmM60AxU/94ZZCcISnjpD1u4=",
                            PasswordSalt = "svgBm5lkEsOrbPsVrDmMoA==",
                            RoleId = 3,
                            SessionId = "",
                            SubscriptionId = ""
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserAddress", "dbo");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.VehicleColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Name = "White"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gray"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Brown"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Beige"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Pink"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Turquoise"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acura"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alfa Romeo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Aston Martin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bentley"
                        },
                        new
                        {
                            Id = 6,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bugatti"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Buick"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cadillac"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Chevrolet"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Chrysler"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dodge"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ferrari"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Genesis"
                        },
                        new
                        {
                            Id = 17,
                            Name = "GMC"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Hyundai"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Infiniti"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Jaguar"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Jeep"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Lamborghini"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Land Rover"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Lexus"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Lincoln"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Lotus"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Maserati"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Mazda"
                        },
                        new
                        {
                            Id = 31,
                            Name = "McLaren"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Mini"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Mitsubishi"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Nissan"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Peugeot"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Ram"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Renault"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Rolls-Royce"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Saab"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Subaru"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Suzuki"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MakeId = 1,
                            Name = "MDX"
                        },
                        new
                        {
                            Id = 2,
                            MakeId = 1,
                            Name = "RDX"
                        },
                        new
                        {
                            Id = 3,
                            MakeId = 1,
                            Name = "TLX"
                        },
                        new
                        {
                            Id = 4,
                            MakeId = 2,
                            Name = "Giulia"
                        },
                        new
                        {
                            Id = 5,
                            MakeId = 2,
                            Name = "Stelvio"
                        },
                        new
                        {
                            Id = 6,
                            MakeId = 3,
                            Name = "DB11"
                        },
                        new
                        {
                            Id = 7,
                            MakeId = 3,
                            Name = "Vantage"
                        },
                        new
                        {
                            Id = 8,
                            MakeId = 4,
                            Name = "A3"
                        },
                        new
                        {
                            Id = 9,
                            MakeId = 4,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 10,
                            MakeId = 4,
                            Name = "Q5"
                        },
                        new
                        {
                            Id = 11,
                            MakeId = 4,
                            Name = "Q7"
                        },
                        new
                        {
                            Id = 12,
                            MakeId = 5,
                            Name = "Continental GT"
                        },
                        new
                        {
                            Id = 13,
                            MakeId = 5,
                            Name = "Bentayga"
                        },
                        new
                        {
                            Id = 14,
                            MakeId = 6,
                            Name = "3 Series"
                        },
                        new
                        {
                            Id = 15,
                            MakeId = 6,
                            Name = "5 Series"
                        },
                        new
                        {
                            Id = 16,
                            MakeId = 6,
                            Name = "X5"
                        },
                        new
                        {
                            Id = 17,
                            MakeId = 6,
                            Name = "X7"
                        },
                        new
                        {
                            Id = 18,
                            MakeId = 7,
                            Name = "Chiron"
                        },
                        new
                        {
                            Id = 19,
                            MakeId = 7,
                            Name = "Veyron"
                        },
                        new
                        {
                            Id = 20,
                            MakeId = 8,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = 21,
                            MakeId = 8,
                            Name = "Encore"
                        },
                        new
                        {
                            Id = 22,
                            MakeId = 9,
                            Name = "Escalade"
                        },
                        new
                        {
                            Id = 23,
                            MakeId = 9,
                            Name = "XT5"
                        },
                        new
                        {
                            Id = 24,
                            MakeId = 10,
                            Name = "Silverado"
                        },
                        new
                        {
                            Id = 25,
                            MakeId = 10,
                            Name = "Malibu"
                        },
                        new
                        {
                            Id = 26,
                            MakeId = 10,
                            Name = "Camaro"
                        },
                        new
                        {
                            Id = 27,
                            MakeId = 11,
                            Name = "300"
                        },
                        new
                        {
                            Id = 28,
                            MakeId = 11,
                            Name = "Pacifica"
                        },
                        new
                        {
                            Id = 29,
                            MakeId = 12,
                            Name = "Charger"
                        },
                        new
                        {
                            Id = 30,
                            MakeId = 12,
                            Name = "Challenger"
                        },
                        new
                        {
                            Id = 31,
                            MakeId = 13,
                            Name = "488"
                        },
                        new
                        {
                            Id = 32,
                            MakeId = 13,
                            Name = "Roma"
                        },
                        new
                        {
                            Id = 33,
                            MakeId = 14,
                            Name = "500"
                        },
                        new
                        {
                            Id = 34,
                            MakeId = 14,
                            Name = "Panda"
                        },
                        new
                        {
                            Id = 35,
                            MakeId = 15,
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 36,
                            MakeId = 15,
                            Name = "Mustang"
                        },
                        new
                        {
                            Id = 37,
                            MakeId = 16,
                            Name = "G70"
                        },
                        new
                        {
                            Id = 38,
                            MakeId = 16,
                            Name = "G90"
                        },
                        new
                        {
                            Id = 39,
                            MakeId = 17,
                            Name = "Sierra"
                        },
                        new
                        {
                            Id = 40,
                            MakeId = 17,
                            Name = "Yukon"
                        },
                        new
                        {
                            Id = 41,
                            MakeId = 18,
                            Name = "Civic"
                        },
                        new
                        {
                            Id = 42,
                            MakeId = 18,
                            Name = "Accord"
                        },
                        new
                        {
                            Id = 43,
                            MakeId = 19,
                            Name = "Elantra"
                        },
                        new
                        {
                            Id = 44,
                            MakeId = 19,
                            Name = "Santa Fe"
                        },
                        new
                        {
                            Id = 45,
                            MakeId = 20,
                            Name = "Q50"
                        },
                        new
                        {
                            Id = 46,
                            MakeId = 20,
                            Name = "QX80"
                        },
                        new
                        {
                            Id = 47,
                            MakeId = 21,
                            Name = "F-PACE"
                        },
                        new
                        {
                            Id = 48,
                            MakeId = 21,
                            Name = "XE"
                        },
                        new
                        {
                            Id = 49,
                            MakeId = 22,
                            Name = "Wrangler"
                        },
                        new
                        {
                            Id = 50,
                            MakeId = 22,
                            Name = "Grand Cherokee"
                        },
                        new
                        {
                            Id = 51,
                            MakeId = 44,
                            Name = "Model S"
                        },
                        new
                        {
                            Id = 52,
                            MakeId = 44,
                            Name = "Model 3"
                        },
                        new
                        {
                            Id = 53,
                            MakeId = 44,
                            Name = "Model X"
                        },
                        new
                        {
                            Id = 54,
                            MakeId = 44,
                            Name = "Model Y"
                        },
                        new
                        {
                            Id = 55,
                            MakeId = 45,
                            Name = "Corolla"
                        },
                        new
                        {
                            Id = 56,
                            MakeId = 45,
                            Name = "Camry"
                        },
                        new
                        {
                            Id = 57,
                            MakeId = 45,
                            Name = "RAV4"
                        },
                        new
                        {
                            Id = 58,
                            MakeId = 46,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 59,
                            MakeId = 46,
                            Name = "Passat"
                        },
                        new
                        {
                            Id = 60,
                            MakeId = 47,
                            Name = "XC90"
                        },
                        new
                        {
                            Id = 61,
                            MakeId = 47,
                            Name = "S60"
                        });
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Vehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PickedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ColorId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Matches", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLIMFinders.Domain.Entities.Vehicles", "Vehicles")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Notifications", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.PlanServices", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.SubscriptionPlans", "SubscriptionPlans")
                        .WithOne("PlanServices")
                        .HasForeignKey("CLIMFinders.Domain.Entities.PlanServices", "PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscriptionPlans");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Searches", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.User", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLIMFinders.Domain.Entities.SubRoles", "SubRoles")
                        .WithOne()
                        .HasForeignKey("CLIMFinders.Domain.Entities.User", "SubRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CLIMFinders.Domain.Entities.SubscriptionPlans", "SubscriptionPlans")
                        .WithMany()
                        .HasForeignKey("TierId");

                    b.Navigation("Roles");

                    b.Navigation("SubRoles");

                    b.Navigation("SubscriptionPlans");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.UserAddress", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.User", "User")
                        .WithOne("Businesses")
                        .HasForeignKey("CLIMFinders.Domain.Entities.UserAddress", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.VehicleModel", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.VehicleMake", "VehicleMake")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleMake");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.Vehicles", b =>
                {
                    b.HasOne("CLIMFinders.Domain.Entities.UserAddress", "Businesses")
                        .WithMany()
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLIMFinders.Domain.Entities.VehicleColor", "VehicleColor")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLIMFinders.Domain.Entities.VehicleMake", "VehicleMake")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CLIMFinders.Domain.Entities.VehicleModel", "VehicleModel")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Businesses");

                    b.Navigation("VehicleColor");

                    b.Navigation("VehicleMake");

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.SubscriptionPlans", b =>
                {
                    b.Navigation("PlanServices")
                        .IsRequired();
                });

            modelBuilder.Entity("CLIMFinders.Domain.Entities.User", b =>
                {
                    b.Navigation("Businesses");
                });
#pragma warning restore 612, 618
        }
    }
}
